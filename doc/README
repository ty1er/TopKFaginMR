How to get the experimenttal results we got:

a. We use the virturall machine "Demo VitualVox Image" provided by the website CS236 project.

b. Produce the jar file:
    1. Use "Maven" to create the jar from source codes in eclipse.
    2. Import with "Import-Maven-Existing Maven Project".
    3. Right click on project's name and choose "Run As Maven Install" to build the project.
    4. Step 3 creates a folder "target" with jar file "fagin.mapreduce-1.0-SNAPSHOT-job.jar".

*. Configuration Mapper and Reducer numbers in source code.
   In FaginAlgorithm.java:
        1. To set the number of Mappers, use 
             sortingJob.setNumReduceTasks(2);
           in line 33.
        2. To set the number of Recuders, use
             topKFilterJob.setNumReduceTasks(2);
           in line 78.
        3. Use "Run As Maven Insall" to recompile it before running on hadoop.


c. Run jar on hadoop
    1. Create folders and copy dataset into hadoop 
    >> hadoop dfs -mkdir /user/cloudera/fagin
    >> hadoop dfs -mkdir /user/cloudera/fagin/input           [this is the input path]
    >> hadoop dfs -copyFromLocal dataset[1 or 2].txt /user/cloudera/fagin/input            
    [make sure only on dataset file in /input per run, or you need to delete it before copy. >> hadoop dfs -rm /user/cloudera/fagin/input/* ]
    2. Run the jar
    Usage: hadoop jar [your jar file name].jar [input path] [output path] [topk number]
    >> hadoop jar fagin.mapreduce-1.0-SNAPSHOT-job.jar /user/cloudera/fagin/input /user/cloudera/fagin/output 5

d. Show the topk results
    The results would be in /user/cloudera/fagin/output/result
    >> hadoop dfs -cat /user/cloudera/fagin/output/result/part-r-00000
    It will show you the topk objects with the values. [for dataset1, it is the normlized result, add 1.0 in each property]

e. Check the execution time records
    The records are stored by the hadoop automatically in localhost
    In every round of MapReduce runs, it contains this information in the terminal:
        The url to track the job: http://localhost.localdomain:8088/proxy/application_[job-id]
        Running job: job_[job-id]
    To see the record, copy the link to the browser.
    The webpage has JobName, Elapsed time, Average Map time, Average Reduce time, which are shown in our report.
